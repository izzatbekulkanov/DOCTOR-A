# Generated by Django 5.0.6 on 2025-01-30 09:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('second_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('job_title', models.CharField(blank=True, help_text='Lavozim, masalan: Shifokor, Hamshira, Administrator', max_length=100, null=True)),
                ('department', models.CharField(blank=True, help_text="Bo'lim, masalan: Kardiologiya, Pediatriya", max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, help_text='Xodimning unikal identifikatori', max_length=50, null=True, unique=True)),
                ('employment_date', models.DateField(blank=True, help_text='Ishga qabul qilingan sana', null=True)),
                ('contract_end_date', models.DateField(blank=True, help_text='Shartnoma tugash sanasi', null=True)),
                ('is_active_employee', models.BooleanField(default=True, help_text="Faol xodimmi yoki yo'qmi")),
                ('medical_specialty', models.CharField(blank=True, help_text='Tibbiyot sohasidagi mutaxassislik, masalan: Nevrologiya', max_length=100, null=True)),
                ('professional_license_number', models.CharField(blank=True, help_text='Mutaxassisning litsenziya raqami', max_length=100, null=True)),
                ('shift_schedule', models.CharField(blank=True, help_text='Ish jadvali, masalan: 9:00 - 18:00', max_length=100, null=True)),
                ('bank_account_number', models.CharField(blank=True, help_text='Bank hisob raqami', max_length=50, null=True)),
                ('tax_identification_number', models.CharField(blank=True, help_text='STIR', max_length=20, null=True)),
                ('insurance_number', models.CharField(blank=True, help_text="Sug'urta raqami", max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Foydalanuvchi faol yoki faol emasligini belgilaydi')),
                ('is_staff', models.BooleanField(default=False, help_text='Foydalanuvchi admin sahifasiga kira oladimi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
